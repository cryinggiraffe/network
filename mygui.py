# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mygui.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import network_check

class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(689, 590)
        self.tabWidget = QtWidgets.QTabWidget(Dialog)
        self.tabWidget.setGeometry(QtCore.QRect(10, 0, 661, 591))
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.horizontalLayoutWidget = QtWidgets.QWidget(self.tab)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(0, 20, 641, 161))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.getconfigbt = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        self.getconfigbt.setObjectName("getconfigbt")
        self.horizontalLayout.addWidget(self.getconfigbt)
        self.textBrowser = QtWidgets.QTextBrowser(self.horizontalLayoutWidget)
        self.textBrowser.setObjectName("textBrowser")
        self.horizontalLayout.addWidget(self.textBrowser)
        self.horizontalLayoutWidget_2 = QtWidgets.QWidget(self.tab)
        self.horizontalLayoutWidget_2.setGeometry(QtCore.QRect(0, 190, 641, 161))
        self.horizontalLayoutWidget_2.setObjectName("horizontalLayoutWidget_2")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_2)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.autopingbt = QtWidgets.QPushButton(self.horizontalLayoutWidget_2)
        self.autopingbt.setObjectName("autopingbt")
        self.horizontalLayout_2.addWidget(self.autopingbt)
        self.autopingresult = QtWidgets.QTextBrowser(self.horizontalLayoutWidget_2)
        self.autopingresult.setObjectName("autopingresult")
        self.horizontalLayout_2.addWidget(self.autopingresult)
        self.gridLayoutWidget = QtWidgets.QWidget(self.tab)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(0, 390, 631, 141))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.gridLayout = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.lineEdit = QtWidgets.QLineEdit(self.gridLayoutWidget)
        self.lineEdit.setObjectName("lineEdit")
        self.gridLayout.addWidget(self.lineEdit, 1, 0, 1, 1)
        self.pingtestresult = QtWidgets.QTextBrowser(self.gridLayoutWidget)
        self.pingtestresult.setObjectName("pingtestresult")
        self.gridLayout.addWidget(self.pingtestresult, 0, 1, 4, 1)
        self.label = QtWidgets.QLabel(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(10)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.gridLayout.addWidget(self.label, 0, 0, 1, 1)
        self.commandLinkButton = QtWidgets.QCommandLinkButton(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(10)
        self.commandLinkButton.setFont(font)
        self.commandLinkButton.setObjectName("commandLinkButton")
        self.gridLayout.addWidget(self.commandLinkButton, 2, 0, 1, 1)
        self.tabWidget.addTab(self.tab, "")
        self.tab2 = QtWidgets.QWidget()
        self.tab2.setObjectName("tab2")
        self.scrollArea = QtWidgets.QScrollArea(self.tab2)
        self.scrollArea.setGeometry(QtCore.QRect(0, 0, 671, 571))
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 669, 569))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.tableView = QtWidgets.QTableView(self.scrollAreaWidgetContents)
        self.dlpage = QtWidgets.QTextBrowser(self.scrollAreaWidgetContents)
        self.dlpage.setGeometry(QtCore.QRect(-10, -10, 661, 581))
        self.dlpage.setObjectName("dlpage")
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.tabWidget.addTab(self.tab2, "")

        self.retranslateUi(Dialog)
        self.tabWidget.setCurrentIndex(0)
        self.getconfigbt.clicked.connect(self.getconfig)
        self.autopingbt.clicked.connect(self.autoping)
        self.commandLinkButton.clicked.connect(self.pingtest)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.getconfigbt.setText(_translate("Dialog", " 本机网络配置获取 "))
        self.textBrowser.setHtml(_translate("Dialog",
                                            "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
                                            "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
                                            "p, li { white-space: pre-wrap; }\n"
                                            "</style></head><body style=\" font-family:\'SimSun\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
                                            "<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.autopingbt.setText(_translate("Dialog", "网络连通性自动测试"))
        self.autopingresult.setHtml(_translate("Dialog",
                                               "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
                                               "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
                                               "p, li { white-space: pre-wrap; }\n"
                                               "</style></head><body style=\" font-family:\'SimSun\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
                                               "<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.label.setText(_translate("Dialog", "输入您想要Ping测试的IP地址："))
        self.commandLinkButton.setText(_translate("Dialog", "点击测试"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("Dialog", "网络测试"))
        content=network_check.getdlpage()
        self.dlpage.setHtml(_translate("Dialog",""+content))

        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab2), _translate("Dialog", "常用下载"))
    def getconfig(self):
        self.textBrowser.clear()
        self.textBrowser.append("网络配置：")
        resulttxt, networkline, ip, gateway = network_check.get_network_config()
        hintlist, pingiplist = network_check.genepinglist(resulttxt, ip, gateway, networkline)
        self.textBrowser.append("\n".join(resulttxt))
        if len(hintlist) > 0:
            self.textBrowser.append("<font color=\"#FF0000\">异常提示信息：</font> ")
            self.textBrowser.append("<font color=\"#FF0000\">" + "\n".join(hintlist) + "</font> ")
    def autoping(self):
        self.autopingresult.clear()
        self.autopingresult.setText("正在进行自动网络测试，稍等片刻")
        resulttxt, networkline, ip, gateway = network_check.get_network_config()
        hintlist, pingiplist = network_check.genepingaskey(resulttxt,ip,gateway,networkline)
        if len(hintlist) > 0:
            self.autopingresult.clear()
            self.autopingresult.append("<font color=\"#FF0000\">异常提示信息：</font> ")
            self.autopingresult.append("<font color=\"#FF0000\">" + "\n".join(hintlist) + "</font> ")
        else:
            self.autopingresult.clear()
            ping_result = network_check.ping_hosts(pingiplist)
            self.autopingresult.append("\n".join(ping_result))
    def pingtest(self):
        self.pingtestresult.clear()
        testip=self.lineEdit.text()
        result=network_check.ping_host(testip)
        self.pingtestresult.append(result)

if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)

    widget = QtWidgets.QWidget()

    ui = Ui_Dialog()

    ui.setupUi(widget)

    widget.show()

    sys.exit(app.exec_())
